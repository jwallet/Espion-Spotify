<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="cbOptBitRate128" xml:space="preserve">
    <value>128kbps</value>
    <comment>interface</comment>
  </data>
  <data name="cbOptBitRate160" xml:space="preserve">
    <value>160kbps</value>
    <comment>interface</comment>
  </data>
  <data name="cbOptBitRate256" xml:space="preserve">
    <value>256kbps</value>
    <comment>interface</comment>
  </data>
  <data name="cbOptBitRate320" xml:space="preserve">
    <value>320kbps</value>
    <comment>interface</comment>
  </data>
  <data name="cbOptBitRateSpotifyFree" xml:space="preserve">
    <value>{0} (Spotify Free)</value>
    <comment>interface</comment>
  </data>
  <data name="cbOptBitRateSpotifyPremium" xml:space="preserve">
    <value>{0} High quality (Spotify Premium)</value>
    <comment>interface</comment>
  </data>
  <data name="cbOptLangEn" xml:space="preserve">
    <value>English</value>
    <comment>interface</comment>
  </data>
  <data name="cbOptLangFr" xml:space="preserve">
    <value>Français</value>
    <comment>interface</comment>
  </data>
  <data name="lblAddFolders" xml:space="preserve">
    <value>Group every artist songs inside their own folder</value>
    <comment>interface</comment>
  </data>
  <data name="lblAddSeparators" xml:space="preserve">
    <value>Replace files name spaces by underscores "_"</value>
    <comment>interface</comment>
  </data>
  <data name="lblAds" xml:space="preserve">
    <value>Ads:</value>
    <comment>interface</comment>
  </data>
  <data name="lblBitRate" xml:space="preserve">
    <value>Audio quality (Bitrate):</value>
    <comment>interface</comment>
  </data>
  <data name="lblCustomize" xml:space="preserve">
    <value>Customize:</value>
    <comment>interface</comment>
  </data>
  <data name="lblDisableAds" xml:space="preserve">
    <value>Disable Spotify audio ads</value>
    <comment>interface</comment>
  </data>
  <data name="lblFormat" xml:space="preserve">
    <value>Audio format:</value>
    <comment>interface</comment>
  </data>
  <data name="lblLanguage" xml:space="preserve">
    <value>Language:</value>
    <comment>interface</comment>
  </data>
  <data name="lblMinLength" xml:space="preserve">
    <value>Minimal length:</value>
    <comment>interface</comment>
  </data>
  <data name="lblNumFiles" xml:space="preserve">
    <value>Add the recording order number infront of all files name</value>
    <comment>interface</comment>
  </data>
  <data name="lblNumTracks" xml:space="preserve">
    <value>Replace track numbers by the recording order number</value>
    <comment>interface</comment>
  </data>
  <data name="lblPath" xml:space="preserve">
    <value>Output path:</value>
    <comment>interface</comment>
  </data>
  <data name="lblRecordingNum" xml:space="preserve">
    <value>Choose the starting position of the recording order number</value>
    <comment>interface</comment>
  </data>
  <data name="logDeleting" xml:space="preserve">
    <value>//Removing: {0}</value>
    <comment>console</comment>
  </data>
  <data name="logDeletingTooShort" xml:space="preserve">
    <value>//Removing: {0} [&lt; {1}s]</value>
    <comment>console</comment>
  </data>
  <data name="logInvalidOutput" xml:space="preserve">
    <value>//Error while recording: The output directory was not found.</value>
    <comment>interface</comment>
  </data>
  <data name="logRecording" xml:space="preserve">
    <value>Recording: {0}</value>
    <comment>console</comment>
  </data>
  <data name="logSpotifyIsClosed" xml:space="preserve">
    <value>//Spotify is closed</value>
    <comment>console</comment>
  </data>
  <data name="logSpotifyNotRunning" xml:space="preserve">
    <value>//Spotify app is not running</value>
    <comment>console</comment>
  </data>
  <data name="logStarting" xml:space="preserve">
    <value>//Spying</value>
    <comment>console</comment>
  </data>
  <data name="logStoping" xml:space="preserve">
    <value>//End</value>
    <comment>console</comment>
  </data>
  <data name="logWaiting" xml:space="preserve">
    <value>//Waiting for next title...</value>
    <comment>console</comment>
  </data>
  <data name="logWriterIsNull" xml:space="preserve">
    <value>//Error while recording: Your computer audio format is not supported. Format needs to be '2 channels, 24 bit, 48000 Hz (Studio Quality)' (Control panel &gt; Sound &gt; Properties &gt; Advanced).</value>
    <comment>console</comment>
  </data>
  <data name="msgBodyCantQuit" xml:space="preserve">
    <value>Do you still want to leave?</value>
    <comment>message</comment>
  </data>
  <data name="msgBodyPathNotFound" xml:space="preserve">
    <value>This output path does not exist, select another one.</value>
    <comment>message</comment>
  </data>
  <data name="msgEnsureAdminContent" xml:space="preserve">
    <value>Spytify needs to restart and get administrator rights to be able to disable Spotify ads. Do you want to proceed and retry?</value>
    <comment>message</comment>
  </data>
  <data name="msgEnsureAdminTitle" xml:space="preserve">
    <value>Administrator rights required</value>
    <comment>message</comment>
  </data>
  <data name="msgTitleCantQuit" xml:space="preserve">
    <value>Spytify is spying</value>
    <comment>message</comment>
  </data>
  <data name="msgTitlePathNotFound" xml:space="preserve">
    <value>Output path invalid</value>
    <comment>message</comment>
  </data>
  <data name="tabRecord" xml:space="preserve">
    <value>Spy</value>
    <comment>interface</comment>
  </data>
  <data name="tabSettings" xml:space="preserve">
    <value>Settings</value>
    <comment>interface</comment>
  </data>
  <data name="tipClear" xml:space="preserve">
    <value>Clear history</value>
    <comment>interface</comment>
  </data>
  <data name="tipDirectory" xml:space="preserve">
    <value>Open output directory</value>
    <comment>interface</comment>
  </data>
  <data name="tipPath" xml:space="preserve">
    <value>Browse</value>
    <comment>interface</comment>
  </data>
  <data name="tipStartSpying" xml:space="preserve">
    <value>Start spying</value>
    <comment>interface</comment>
  </data>
  <data name="tipStopSying" xml:space="preserve">
    <value>Stop spying</value>
    <comment>interface</comment>
  </data>
</root>