//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EspionSpotify {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class english {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal english() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("EspionSpotify.english", typeof(english).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        internal static string cbDefault {
            get {
                return ResourceManager.GetString("cbDefault", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 128kbps.
        /// </summary>
        internal static string cbOptBitRate128 {
            get {
                return ResourceManager.GetString("cbOptBitRate128", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 160kbps.
        /// </summary>
        internal static string cbOptBitRate160 {
            get {
                return ResourceManager.GetString("cbOptBitRate160", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 256kbps.
        /// </summary>
        internal static string cbOptBitRate256 {
            get {
                return ResourceManager.GetString("cbOptBitRate256", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 320kbps.
        /// </summary>
        internal static string cbOptBitRate320 {
            get {
                return ResourceManager.GetString("cbOptBitRate320", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} (Spotify Free).
        /// </summary>
        internal static string cbOptBitRateSpotifyFree {
            get {
                return ResourceManager.GetString("cbOptBitRateSpotifyFree", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} High quality (Spotify Premium).
        /// </summary>
        internal static string cbOptBitRateSpotifyPremium {
            get {
                return ResourceManager.GetString("cbOptBitRateSpotifyPremium", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to English.
        /// </summary>
        internal static string cbOptLangEn {
            get {
                return ResourceManager.GetString("cbOptLangEn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Français.
        /// </summary>
        internal static string cbOptLangFr {
            get {
                return ResourceManager.GetString("cbOptLangFr", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use Audacity (a free editor for audio files) to cut the audio section that you want to remove and export it back to the same audio type. Spytify cannot guarantee that an ad or a track will be detected correctly since it&apos;s based on a bit of information available in the Spotify process that is not always accurate..
        /// </summary>
        internal static string lblAdAndTrackOverlapOnRecordedTrack {
            get {
                return ResourceManager.GetString("lblAdAndTrackOverlapOnRecordedTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Group every artist songs inside their own folder.
        /// </summary>
        internal static string lblAddFolders {
            get {
                return ResourceManager.GetString("lblAddFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace files name spaces by underscores &quot;_&quot;.
        /// </summary>
        internal static string lblAddSeparators {
            get {
                return ResourceManager.GetString("lblAddSeparators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ads:.
        /// </summary>
        internal static string lblAds {
            get {
                return ResourceManager.GetString("lblAds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spytify feature &quot;Disable Ads&quot; might affect the way an unknown ad plays when it can&apos;t be blocked. Try to re-enable this setting once more to get the last blocked ad domains or disable the setting and restart both apps..
        /// </summary>
        internal static string lblAdsPlayAndStop {
            get {
                return ResourceManager.GetString("lblAdsPlayAndStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio Device:.
        /// </summary>
        internal static string lblAudioDevice {
            get {
                return ResourceManager.GetString("lblAudioDevice", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First case, Spytify disables most apps when the recording session starts. Make sure to mute in the &quot;Volume Mixer&quot; all applications running in a background process in your system tray that can emit a sound as well as all applications that you open while recording. Only Spotify and Spytify should not be muted. Second case, you might experiment some cracking/popping sounds when playing a recorded file over the whole listening. These sounds are related to the quality (bitrate) being different from Spotify to Sp [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string lblBackgroundNoiceRecordedOnTrack {
            get {
                return ResourceManager.GetString("lblBackgroundNoiceRecordedOnTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio quality:.
        /// </summary>
        internal static string lblBitRate {
            get {
                return ResourceManager.GetString("lblBitRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable as much Spotify audio ads as possible.
        /// </summary>
        internal static string lblDisableAds {
            get {
                return ResourceManager.GetString("lblDisableAds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate the current track file name to avoid overwriting files with the same name..
        /// </summary>
        internal static string lblDuplicateAlreadyRecordedTrack {
            get {
                return ResourceManager.GetString("lblDuplicateAlreadyRecordedTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delay next recording if sound is detected.
        /// </summary>
        internal static string lblEndingSongDelay {
            get {
                return ResourceManager.GetString("lblEndingSongDelay", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio format:.
        /// </summary>
        internal static string lblFormat {
            get {
                return ResourceManager.GetString("lblFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language:.
        /// </summary>
        internal static string lblLanguage {
            get {
                return ResourceManager.GetString("lblLanguage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Minimal length:.
        /// </summary>
        internal static string lblMinLength {
            get {
                return ResourceManager.GetString("lblMinLength", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mute Ads.
        /// </summary>
        internal static string lblMuteAds {
            get {
                return ResourceManager.GetString("lblMuteAds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add the recording order number infront of all files name.
        /// </summary>
        internal static string lblNumFiles {
            get {
                return ResourceManager.GetString("lblNumFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace track numbers by the recording order number.
        /// </summary>
        internal static string lblNumTracks {
            get {
                return ResourceManager.GetString("lblNumTracks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output path:.
        /// </summary>
        internal static string lblPath {
            get {
                return ResourceManager.GetString("lblPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recorder:.
        /// </summary>
        internal static string lblRecorder {
            get {
                return ResourceManager.GetString("lblRecorder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Choose the starting position of the recording order number.
        /// </summary>
        internal static string lblRecordingNum {
            get {
                return ResourceManager.GetString("lblRecordingNum", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timer for the recording session.
        /// </summary>
        internal static string lblRecordingTimer {
            get {
                return ResourceManager.GetString("lblRecordingTimer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Record unkown type tracks detected as an ad.
        /// </summary>
        internal static string lblRecordUnknownTrackType {
            get {
                return ResourceManager.GetString("lblRecordUnknownTrackType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When you enable &quot;Disable Ads&quot; in Spytify settings, you accept that these features won&apos;t be available no more, it&apos;s to make sure as many ads as possible get disabled. However, you can go to &quot;C:\Windows\System32\drivers\etc\host&quot; to edit the file with notepad, search for the domain &quot;spclient.wg.spotify.com&quot; and add a &quot;#&quot; at the beginning of the line to make it inactive..
        /// </summary>
        internal static string lblSpotifyLostFeatures {
            get {
                return ResourceManager.GetString("lblSpotifyLostFeatures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spotify looks for local music files before playing a track. If it finds one with the same metadata that the current song, it will play the local one instead. Cut track means that you started recording this track once and you ended the session too early. Just delete these incomplete tracks in your music directory to solve your issue..
        /// </summary>
        internal static string lblSpotifyTrackCut {
            get {
                return ResourceManager.GetString("lblSpotifyTrackCut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spy:.
        /// </summary>
        internal static string lblSpy {
            get {
                return ResourceManager.GetString("lblSpy", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Podcast, audio book and any other uncommon track type are detected as an ad. Also, Spotify doesn&apos;t return to Spyitfy the right info when you switch between radios, playlists and albums, resulting in a track detected as an ad. If this happens, replay the current song, if this happens too often, create a playlist of the songs you want to save and play it. Spytify cannot guarantee that a track will be detected correctly since it&apos;s based on a bit of information available in the Spotify process that is not alway [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string lblTrackDetectedAsAd {
            get {
                return ResourceManager.GetString("lblTrackDetectedAsAd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ad.
        /// </summary>
        internal static string logAd {
            get {
                return ResourceManager.GetString("logAd", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // An ad is playing..
        /// </summary>
        internal static string logAdPlaying {
            get {
                return ResourceManager.GetString("logAdPlaying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Removing: {0}.
        /// </summary>
        internal static string logDeleting {
            get {
                return ResourceManager.GetString("logDeleting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Removing: {0} [&lt; {1}s].
        /// </summary>
        internal static string logDeletingTooShort {
            get {
                return ResourceManager.GetString("logDeletingTooShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Error while recording: The output directory was not found..
        /// </summary>
        internal static string logInvalidOutput {
            get {
                return ResourceManager.GetString("logInvalidOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Error while recording: Access to the output directory is denied, run Spytify as an administrator or change for another one..
        /// </summary>
        internal static string logNoAccessOutput {
            get {
                return ResourceManager.GetString("logNoAccessOutput", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown.
        /// </summary>
        internal static string logOther {
            get {
                return ResourceManager.GetString("logOther", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Recording: {0}.
        /// </summary>
        internal static string logRecording {
            get {
                return ResourceManager.GetString("logRecording", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Recording session timer is done..
        /// </summary>
        internal static string logRecordingTimerDone {
            get {
                return ResourceManager.GetString("logRecordingTimerDone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Spotify isn&apos;t running, trying to launch it..
        /// </summary>
        internal static string logSpotifyConnecting {
            get {
                return ResourceManager.GetString("logSpotifyConnecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Spotify is closed.
        /// </summary>
        internal static string logSpotifyIsClosed {
            get {
                return ResourceManager.GetString("logSpotifyIsClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Spotify didn&apos;t connect to the local API, please try again..
        /// </summary>
        internal static string logSpotifyNotConnected {
            get {
                return ResourceManager.GetString("logSpotifyNotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Spotify wasn&apos;t found or isn&apos;t installed..
        /// </summary>
        internal static string logSpotifyNotFound {
            get {
                return ResourceManager.GetString("logSpotifyNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Spytify cannot record if Spotify and Spytify don&apos;t use the same audio endpoint..
        /// </summary>
        internal static string logSpotifyPlayingOutsideOfSelectedAudioEndPoint {
            get {
                return ResourceManager.GetString("logSpotifyPlayingOutsideOfSelectedAudioEndPoint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Spying.
        /// </summary>
        internal static string logStarting {
            get {
                return ResourceManager.GetString("logStarting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // End.
        /// </summary>
        internal static string logStoping {
            get {
                return ResourceManager.GetString("logStoping", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Error while recording: Unknown exception.
        /// </summary>
        internal static string logUnknownException {
            get {
                return ResourceManager.GetString("logUnknownException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Error while recording: Recording multi-channel files is not supported ({0} channels), reduce the number of channels to 2 (stereo) or 1 (mono)..
        /// </summary>
        internal static string logUnsupportedNumberChannels {
            get {
                return ResourceManager.GetString("logUnsupportedNumberChannels", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Error while recording: Your computer audio format is not supported. Format needs to be &apos;2 channels, 24 bit, 48000 Hz (Studio Quality)&apos; or lower.  --&gt; Control panel &gt; Sound &gt; Properties &gt; Advanced.
        /// </summary>
        internal static string logUnsupportedRate {
            get {
                return ResourceManager.GetString("logUnsupportedRate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to // Waiting for next title....
        /// </summary>
        internal static string logWaiting {
            get {
                return ResourceManager.GetString("logWaiting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you still want to leave?.
        /// </summary>
        internal static string msgBodyCantQuit {
            get {
                return ResourceManager.GetString("msgBodyCantQuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to By disabling ads, you also disable Spotify radios, your daily mixes, podcasts and your friend list. Otherwise, Spotify could still be able to play some ads. Disable this feature before leaving Spytify if you want to recover all these Spotify features..
        /// </summary>
        internal static string msgBodyDisableAds {
            get {
                return ResourceManager.GetString("msgBodyDisableAds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This output path does not exist, select another one..
        /// </summary>
        internal static string msgBodyPathNotFound {
            get {
                return ResourceManager.GetString("msgBodyPathNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spytify needs to restart and get administrator rights to be able to disable Spotify ads. Do you want to proceed and retry?.
        /// </summary>
        internal static string msgEnsureAdminContent {
            get {
                return ResourceManager.GetString("msgEnsureAdminContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Administrator rights required.
        /// </summary>
        internal static string msgEnsureAdminTitle {
            get {
                return ResourceManager.GetString("msgEnsureAdminTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Do you want to open GitHub to view the newest Spytify release?.
        /// </summary>
        internal static string msgNewVersionContent {
            get {
                return ResourceManager.GetString("msgNewVersionContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Version {0} is out!.
        /// </summary>
        internal static string msgNewVersionTitle {
            get {
                return ResourceManager.GetString("msgNewVersionTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spytify is spying.
        /// </summary>
        internal static string msgTitleCantQuit {
            get {
                return ResourceManager.GetString("msgTitleCantQuit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Disable Ads.
        /// </summary>
        internal static string msgTitleDisableAds {
            get {
                return ResourceManager.GetString("msgTitleDisableAds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output path invalid.
        /// </summary>
        internal static string msgTitlePathNotFound {
            get {
                return ResourceManager.GetString("msgTitlePathNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Advanced Settings.
        /// </summary>
        internal static string tabAdvanced {
            get {
                return ResourceManager.GetString("tabAdvanced", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to F.A.Q..
        /// </summary>
        internal static string tabFAQ {
            get {
                return ResourceManager.GetString("tabFAQ", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spy.
        /// </summary>
        internal static string tabRecord {
            get {
                return ResourceManager.GetString("tabRecord", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Settings.
        /// </summary>
        internal static string tabSettings {
            get {
                return ResourceManager.GetString("tabSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Clear history.
        /// </summary>
        internal static string tipClear {
            get {
                return ResourceManager.GetString("tipClear", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open output directory.
        /// </summary>
        internal static string tipDirectory {
            get {
                return ResourceManager.GetString("tipDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse.
        /// </summary>
        internal static string tipPath {
            get {
                return ResourceManager.GetString("tipPath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to New version available.
        /// </summary>
        internal static string tipRelease {
            get {
                return ResourceManager.GetString("tipRelease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start spying.
        /// </summary>
        internal static string tipStartSpying {
            get {
                return ResourceManager.GetString("tipStartSpying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stop spying.
        /// </summary>
        internal static string tipStopSying {
            get {
                return ResourceManager.GetString("tipStopSying", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ads and tracks overlap at the beginning/end of recorded tracks..
        /// </summary>
        internal static string tlAdAndTrackOverlapOnRecordedTrack {
            get {
                return ResourceManager.GetString("tlAdAndTrackOverlapOnRecordedTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spotify still plays ads, even after turning them off and it goes to pause/play every second..
        /// </summary>
        internal static string tlAdsPlayAndStop {
            get {
                return ResourceManager.GetString("tlAdsPlayAndStop", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Background noise/sound was recorded on the saved track file..
        /// </summary>
        internal static string tlBackgroundNoiceRecordedOnTrack {
            get {
                return ResourceManager.GetString("tlBackgroundNoiceRecordedOnTrack", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spotify lost some features after turning ads off: Friend list, radio, daily mixes and podcasts..
        /// </summary>
        internal static string tlSpotifyLostFeatures {
            get {
                return ResourceManager.GetString("tlSpotifyLostFeatures", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Spotify only plays a bit of a track, it stops playing it after some seconds..
        /// </summary>
        internal static string tlSpotifyTrackCut {
            get {
                return ResourceManager.GetString("tlSpotifyTrackCut", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tracks are detected as an ad..
        /// </summary>
        internal static string tlTrackDetectedAsAd {
            get {
                return ResourceManager.GetString("tlTrackDetectedAsAd", resourceCulture);
            }
        }
    }
}
